package org.example;
import com.typesafe.config.Config;
import com.typesafe.config.ConfigFactory;
import org.apache.spark.sql.*;
import org.example.function.parser.beans.IPSStatFunction;
import org.example.function.parser.functions.reader.CSVReader;
import org.example.function.parser.functions.writer.CSVWriter;


public class Main {
    public static void main( String[] args ) {

        System.setProperty("hadoop.home.dir", "C:\\hadoop-3.2.1");

        Config config = ConfigFactory.load();
        String masterUrl = config.getString("app.spark.master");
        String appName = config.getString("app.appname");

        SparkSession spark = SparkSession
                .builder()
                .master(masterUrl)
                .appName(appName)
                .getOrCreate();

        String inputPath = config.getString("app.data.input");
        String outputPath = config.getString("app.data.output");

        IPSStatFunction IPSStatFunction = new IPSStatFunction() ;

        CSVReader csvReader = new CSVReader(spark , inputPath) ;
        CSVWriter csvWriter = new CSVWriter(outputPath) ;
        csvWriter.accept(IPSStatFunction.apply(csvReader.get()));

       /* Dataset<IPS> cleanDS =new Mapper().apply(inputDS);
        cleanDS.printSchema();
        cleanDS.show(5, false); */
    }
}


        /* String outputPathCSV = config.getString("app.data.outputCSV");
        Dataset<Row> ds = spark.read().option("delimiter", ";") .option( "header", "true").csv(inputPath);
        Dataset<Row> statds = ds.groupBy("code_du_departement").agg(count("nom_de_l_etablissment").as("nb"), avg("ips").as("moyenne")).orderBy(avg("ips"));

        statds.printSchema();
        statds.show(100, false);

        //statds.write().partitionBy("code_du_departement").parquet(outputPath);
        statds.write().partitionBy()
                .option("header", true)
                .option("delimiter","|")
                .csv(outputPathCSV);

         */

//Dataset<Row> inputDS = spark.read().option("delimiter", ";").option( "header", "true").csv(inputPath);
//inputDS.printSchema();
//inputDS.show(5, false);
